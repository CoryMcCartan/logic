TODO
 - add ability for custom functions as truth evaluations
 - write doc
 - clean up code



wrap objects in logic proxy:

var robert = {};
var john = {};
var sue = {};
...
robert = T(robert);
john = T(john);
sue = T(sue);
let who = V();
let X = V();
let Y = V();
let Z = V();

terms(
    (robert).has("father")(john),
    (robert).has("mother")(sue),
    (robert).is("person"),
    (john).is("person"),
    (sue).is("person")
);

let query1 = (who).is("person"); // [robert, john, sue]
let query2 = (robert).has("mother")(who); // [sue]
let query3 = (who).is("mother").of(robert); // [sue]  Should this work?? .of() flips order

console.log(query1()); // print out result
console.log(query2()); // print out result
console.log(query3()); // print out result

given(
    (X).has("father")(Y)
).and(
    (X).has("mother")(Z)
).then(
    (Y).is("married_to")(Z),
    (Z).is("married_to")(Y)
);

// OR
given(
    (X).has("father")(Y),
    (X).has("mother")(Z)
).then(
    (Y).is("married_to")(Z),
    (Z).is("married_to")(Y)
);

(john).is("married_to")(sue);
john.is_married_to.sue;


create class that implements ArrayView to manage custom structures

fuzzy logic...?
